{% extends 'base.html.twig' %}

{% block title %}Hello IndexController!{% endblock %}

{% block body %}
    <div class="example-wrapper">
        <h4>Test Case {{ id }}</h4>
        <table>
            <tr>
                <th>Parent</th>
                <th>Child</th>
            </tr>
            <tr>
                <td>
                    <a class="button button1" tip="btn1" href="https://127.0.0.1:8001/_profiler/open?file=templates/components/{{ component_name }}.html.twig&line=1" target=”_blank”>Parent Component Twig File</a>
                </td>
                <td>
                    <a class="button button2" tip="btn2" href="https://127.0.0.1:8001/_profiler/open?file=templates/components/child.html.twig&line=1" target=”_blank”>Child Component Twig File</a>
                </td>
            </tr>
            <tr>
                <td>
                    <a class="button button3" tip="btn3" href="https://127.0.0.1:8001/_profiler/open?file=src/Twig/Components/{{ controller_name }}&line=1" target=”_blank”>Parent Component Php File</a>
                </td>
                <td>
                    <a class="button button4" tip="btn4" href="https://127.0.0.1:8001/_profiler/open?file=src/Twig/Components/ChildComponent.php&line=1" target=”_blank”>Child Component Php File</a>
                </td>
            </tr>
        </table>

        <br>

        <hr>
        The Child Component is called from Parent with these settings :
        <pre>
            <code>
                    {{- options.child_component|escape('html') -}}
            </code>
        </pre>


        {{ component(component_name) }}
        <hr>
        <h4>Beviahor and Remarks :</h4>
        {{ options.comment|raw }}
{#        <pre>#}
{#            <code>#}
{#                    {{- options.comment|escape('html') -}}#}
{#            </code>#}
{#        </pre>#}
    </div>


    <script>
        Array.from(document.querySelectorAll('[tip]')).forEach(el => {
            let tip = document.createElement('div');
            tip.classList.add('tooltip');
            let href = el.getAttribute('href');
            tip.innerHTML = "<iframe src='"+href+"' style=\"height:500px;width:600px\"></iframe>";
            tip.style.position = 'absolute';
            tip.style.left = '40px';
            el.appendChild(tip);
            el.onmousemove = () => {
                let elTop = el.getBoundingClientRect().top;
                tip.style.top = (elTop+20)+'px';
            };
        });
    </script>

{% endblock %}
